#!/usr/bin/env python3

# Andrew Enrique Oliveira
# Ciência da Computação - Universidade Federal de Itajubá (2017 - )
# 24/10/2019

import os
import subprocess

#list that contains files extensions
extension = ["o", "c"]

#function that turns a C source code into a object file 
def fileToObject(sourceCode):
    flag = len(sourceCode)

    for element in sourceCode:
        if os.path.isfile(element):
            subprocess.run(["gcc", "-c", element])
            flag-=1
        
    if flag == 0:
        return True
    else:
        return False

#function that creates a static library with a name given as argument
def newLibrary(libName, objectFile):
    libList = ["ar", "rs", libName]

    for filename in objectFile:
        libList.append(filename)

    subprocess.run(libList)

#deletes all the object files
def deleteObjectFiles(flag):
    objectFile = [
        filename for filename in os.listdir('.') if any(filename.endswith(ext) for ext in extension[0])
    ]

    for filename in objectFile: 
        subprocess.run(["rm", filename])

    if flag == 1:
        subprocess.run(["rm", objectClient])

#menu
option = -1
while(option < int(0) or option > int(1)):
    print("Chose a number:")
    print("1 - Create a library")
    print("0 - Exit")
    option = int(input(">> "))
    if(option < int(0) or option > int(1)):
        print("Please, enter a valid number")

if(option == 1):
    #tad's names received from user
    tad = []
    print("Enter the C library file and client file that will compose the output")
    while True:
        element = input("file: ")
        if element == "":
            break
        print("")
        print("(if there is no more files that will compose the output file, just press RETURN)")
        print("")
        tad.append(element)

    #libName = input("Enter the static library's name: ")
    libName = "libStatic.a"
    outputName = "output"

    #calling fileToObject function and passing a list of tad files as argument
    if(fileToObject(tad)):

        #list of object files proveninet from fileToObject function
        objectFile = [
            filename for filename in os.listdir('.') if any(filename.endswith(ext) for ext in extension[0])
        ]

        #calling newLibrary function and passing a list of file object to it
        newLibrary(libName, objectFile)

    #in case an entered file does not exist
    else:
        print("Some files doesn't exist in this directory. Exiting...")
        deleteObjectFiles(0)
        exit()

    #list containg all files that ends with ".c"
    sourceCode = [filename for filename in os.listdir('.') if any(filename.endswith(ext) for ext in extension[1])]

    #searching for the client file, that is, the file that will utilize the static library
    for filename in sourceCode:
        if filename == tad:
            continue
        else:
            client = [filename]

    #running the client file with the static library to get an executable output
    fileToObject(client)
    objectClient = client[0][:-1] + "o"

    subprocess.run(["gcc", "-o", outputName, objectClient, libName])

    #deletes all the object files
    deleteObjectFiles(1)

    if (os.path.isfile(libName) and os.path.isfile(outputName)):
        print("SUCCESS! Library generated and output compiled")

else:
    exit()
